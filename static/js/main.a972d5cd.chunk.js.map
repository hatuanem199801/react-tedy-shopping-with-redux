{"version":3,"sources":["mock/images/apple-drinks.jpg","mock/images/soda.jpg","mock/images/tomato-juice.jpg","mock/images/icecream.jpg","container/Navbar.js","container/Layout.js","components/Product.js","container/Products.js","redux/actions/orderAction.js","redux/actions/index.js","redux/actions/productAction.js","components/Order.js","components/CheckOut.js","container/Orders.js","App.js","serviceWorker.js","redux/reducers/orderReducer.js","mock/products.js","redux/reducers/productReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Navbar","counterOrder","JSON","parse","localStorage","getItem","reduce","total","order","quantity","className","to","id","Layout","state","Fragment","this","props","children","Component","Product","product","onAddToCart","style","width","height","src","image","alt","title","price","onClick","Products","handleAddToCart","addOrder","document","getElementById","innerHTML","fetchProducts","listProducts","data","length","map","key","connect","items","dispatch","type","payload","Order","onIncrement","onDecrement","onDelete","role","marginRight","CheckOut","onCheckOut","Orders","handleIncrementOrder","incrementOrder","handleDecrementOrder","decrementOrder","orders","index","indexOf","handleDeleteOrder","orderId","removeOrder","filter","handleCheckout","checkOut","fetchOrder","listOrders","nothingOrder","totalPrice","App","exact","path","component","Boolean","window","location","hostname","match","initialState","AppleDrinks","Soda","TomatoJuice","IceCream","combineReducers","action","isAdded","some","forEach","push","setItem","stringify","products","middleWare","thunk","store","createStore","rootReducers","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a972d5cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/apple-drinks.69cec1ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/soda.9e8968b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tomato-juice.9c31209c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/icecream.9e592edb.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  const orders = JSON.parse(localStorage.getItem(\"orders\")) || [];\r\n  const counterOrder = orders.reduce(\r\n    (total, order) => total + order.quantity,\r\n    0\r\n  );\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light shadow-sm\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Tedy Shopping\r\n        </Link>\r\n        <Link className=\"Orders\" to=\"/orders\">\r\n          Orders{\" \"}\r\n          <span className=\"badge badge-danger\" id=\"Counter-Order\">\r\n            {counterOrder}\r\n          </span>\r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass Layout extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar />\r\n        <div className=\"container mt-4\">{this.props.children}</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Product = ({ product, onAddToCart }) => (\r\n  <div className=\"col-6 col-sm-4 col-md-3\">\r\n    <div className=\"card m-1 p-0 border-0 \">\r\n      <div className=\"text-center\">\r\n        <img\r\n          style={{ width: 150, height: 200 }}\r\n          src={product.image}\r\n          className=\"card-img-top img-fluid border-0\"\r\n          alt={product.title}\r\n        />\r\n        <div className=\"card-body m-1 p-1 text-left\">\r\n          <h6 className=\"card-title pb-2 m-0\">{product.title}</h6>\r\n          <p className=\"text-danger p-0 m-0\">{product.price}</p>\r\n          <div className=\"mt-1\">\r\n            <button\r\n              onClick={() => onAddToCart(product)}\r\n              className=\"badge badge-danger border-0 p-1\"\r\n            >\r\n              add to cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProduct.propTypes = {\r\n  product: PropTypes.object.isRequired,\r\n  onAddToCart: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Product;\r\n","import React, { Component } from \"react\";\r\nimport Product from \"../components/Product\";\r\nimport { fetchProducts } from \"../redux/actions/productAction\";\r\nimport { addOrder } from \"../redux/actions/orderAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Products extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchProducts();\r\n  }\r\n  handleAddToCart = product => {\r\n    this.props.addOrder(product);\r\n    document.getElementById(\"Counter-Order\").innerHTML++;\r\n  };\r\n  render() {\r\n    const listProducts =\r\n      this.props.data.length > 0 ? (\r\n        this.props.data.map(product => (\r\n          <Product\r\n            key={product.id}\r\n            onAddToCart={this.handleAddToCart}\r\n            product={product}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div>Loading ... </div>\r\n      );\r\n\r\n    return <div className=\"row\">{listProducts}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.product.items\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addOrder: product => dispatch(addOrder(product)),\r\n  fetchProducts: () => dispatch(fetchProducts())\r\n});\r\n\r\nProducts.propTypes = {\r\n  fetchProducts: PropTypes.func.isRequired,\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      image: PropTypes.string.isRequired,\r\n      price: PropTypes.number.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Products);\r\n","import {\r\n  ADD_ORDER,\r\n  REMOVE_ORDER,\r\n  FECTH_ORDER,\r\n  INCREMENT_ORDER,\r\n  DECREMENT_ORDER,\r\n  CHECK_OUT\r\n} from \"./index\";\r\n\r\nexport const fetchOrder = () => dispatch => {\r\n  dispatch({\r\n    type: FECTH_ORDER\r\n  });\r\n};\r\n\r\nexport const addOrder = product => dispatch => {\r\n  dispatch({\r\n    type: ADD_ORDER,\r\n    payload: product\r\n  });\r\n};\r\n\r\nexport const removeOrder = orderId => dispatch => {\r\n  dispatch({\r\n    type: REMOVE_ORDER,\r\n    payload: orderId\r\n  });\r\n};\r\n\r\nexport const incrementOrder = order => dispatch => {\r\n  dispatch({\r\n    type: INCREMENT_ORDER,\r\n    payload: order\r\n  });\r\n};\r\n\r\nexport const decrementOrder = order => dispatch => {\r\n  dispatch({\r\n    type: DECREMENT_ORDER,\r\n    payload: order\r\n  });\r\n};\r\n\r\nexport const checkOut = () => dispatch => {\r\n  dispatch({\r\n    type: CHECK_OUT\r\n  });\r\n};\r\n","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\nexport const FECTH_ORDER = \"FECTH_ORDER\";\r\nexport const ADD_ORDER = \"ADD_ORDER\";\r\nexport const REMOVE_ORDER = \"REMOVE_ORDER\";\r\nexport const INCREMENT_ORDER = \"INCREMENT_ORDER\";\r\nexport const DECREMENT_ORDER = \"DECREMENT_ORDER\";\r\nexport const CHECK_OUT = \"CHECK_OUT\";\r\n","import { FETCH_PRODUCTS } from \"./index\";\r\n\r\nexport const fetchProducts = () => dispatch => {\r\n  dispatch({\r\n    type: FETCH_PRODUCTS\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Order({ order, onIncrement, onDecrement, onDelete }) {\r\n  return (\r\n    <div className=\"alert\" role=\"alert\">\r\n      <div className=\"\">\r\n        <img\r\n          style={{\r\n            marginRight: 20,\r\n            width: 150\r\n          }}\r\n          src={order.product.image}\r\n          className=\"img-fluid\"\r\n          alt={order.product.title}\r\n        />\r\n      </div>\r\n      <h4>{order.product.title}</h4>\r\n      <span>\r\n        Price : <span className=\"text-danger\">{order.product.price}</span>\r\n      </span>\r\n      <div>\r\n        <button\r\n          onClick={() => onDecrement(order)}\r\n          className=\"btn btn-dark btn-sm p-2\"\r\n        >\r\n          -\r\n        </button>\r\n        <span className=\"badge badge-warning p-2 m-2\">{order.quantity}</span>\r\n        <button\r\n          onClick={() => onIncrement(order)}\r\n          className=\"btn btn-dark btn-sm p-2\"\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button\r\n          onClick={() => onDelete(order.id)}\r\n          className=\"btn btn-link pl-0\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nOrder.propTypes = {\r\n  order: PropTypes.object.isRequired,\r\n  onIncrement: PropTypes.func.isRequired,\r\n  onDecrement: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Order;\r\n","import React from \"react\";\r\n\r\nconst CheckOut = ({ total, onCheckOut }) => {\r\n  return (\r\n    <div className=\"shadow-sm p-2\">\r\n      <h5>Total order</h5>\r\n      <p className=\"text-danger font-weight-bold\">{total}</p>\r\n      <div className=\"text-center\">\r\n        <button onClick={() => onCheckOut()} className=\"btn btn-warning\">\r\n          Checkout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckOut;\r\n","import React, { Component } from \"react\";\r\nimport Order from \"../components/Order\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CheckOut from \"../components/CheckOut\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchOrder,\r\n  removeOrder,\r\n  decrementOrder,\r\n  incrementOrder,\r\n  checkOut\r\n} from \"../redux/actions/orderAction\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchOrder();\r\n  }\r\n\r\n  handleIncrementOrder = order => {\r\n    this.props.incrementOrder(order);\r\n    document.getElementById(\"Counter-Order\").innerHTML++;\r\n  };\r\n\r\n  handleDecrementOrder = order => {\r\n    this.props.decrementOrder(order);\r\n    const orders = [...this.props.data];\r\n    const index = orders.indexOf(order);\r\n    if (orders[index].quantity > 1) {\r\n      document.getElementById(\"Counter-Order\").innerHTML--;\r\n    }\r\n  };\r\n\r\n  handleDeleteOrder = orderId => {\r\n    this.props.removeOrder(orderId);\r\n    const newOrders = this.props.data.filter(order => order.id !== orderId);\r\n    const counterOrder = newOrders.reduce(\r\n      (total, order) => total + order.quantity,\r\n      0\r\n    );\r\n    document.getElementById(\"Counter-Order\").innerHTML = counterOrder;\r\n  };\r\n\r\n  handleCheckout = () => {\r\n    document.getElementById(\"Counter-Order\").innerHTML = 0;\r\n    this.props.checkOut();\r\n  };\r\n\r\n  totalPrice() {\r\n    return this.props.data.reduce(\r\n      (total, order) => total + order.quantity * order.product.price,\r\n      0\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const listOrders =\r\n      this.props.data.length > 0 ? (\r\n        <div>\r\n          <h1>Your cart</h1>\r\n          {this.props.data.map(order => (\r\n            <Order\r\n              onIncrement={this.handleIncrementOrder}\r\n              onDecrement={this.handleDecrementOrder}\r\n              onDelete={this.handleDeleteOrder}\r\n              key={order.id}\r\n              order={order}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div>Loading ...</div>\r\n      );\r\n    const nothingOrder = (\r\n      <div>\r\n        <h2>Nothing order</h2>\r\n        <hr />\r\n        <Link to=\"/\" className=\"text-primary\">\r\n          Back to home page\r\n        </Link>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-6 col-sm-9 col-md-9\">\r\n          {this.props.data.length > 0 ? listOrders : nothingOrder}\r\n        </div>\r\n        <div className=\"col-6 col-sm-3 col-md-3\">\r\n          <CheckOut\r\n            total={this.totalPrice()}\r\n            onCheckOut={this.handleCheckout}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.orders.items\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchOrder: () => dispatch(fetchOrder()),\r\n  removeOrder: orderId => dispatch(removeOrder(orderId)),\r\n  incrementOrder: order => dispatch(incrementOrder(order)),\r\n  decrementOrder: order => dispatch(decrementOrder(order)),\r\n  checkOut: () => dispatch(checkOut())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Orders);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Layout from \"./container/Layout\";\r\nimport Products from \"./container/Products\";\r\nimport Orders from \"./container/Orders\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Layout>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Products} />\r\n            <Route exact path=\"/orders\" component={Orders} />\r\n          </Switch>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  FECTH_ORDER,\r\n  ADD_ORDER,\r\n  REMOVE_ORDER,\r\n  INCREMENT_ORDER,\r\n  DECREMENT_ORDER,\r\n  CHECK_OUT\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  items: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const orders = [...state.items];\r\n  switch (action.type) {\r\n    case FECTH_ORDER:\r\n      return {\r\n        ...state,\r\n        items: JSON.parse(localStorage.getItem(\"orders\")) || []\r\n      };\r\n    case ADD_ORDER:\r\n      const isAdded = orders.some(\r\n        order => order.product.id === action.payload.id\r\n      );\r\n      if (isAdded) {\r\n        orders.forEach(order => {\r\n          if (order.product.id === action.payload.id) {\r\n            order.quantity += 1;\r\n            return order;\r\n          }\r\n        });\r\n      } else {\r\n        orders.push({\r\n          id: orders.length + 1,\r\n          product: action.payload,\r\n          quantity: 1\r\n        });\r\n      }\r\n      localStorage.setItem(\"orders\", JSON.stringify(orders));\r\n      return {\r\n        ...state,\r\n        items: orders\r\n      };\r\n    case REMOVE_ORDER:\r\n      return {\r\n        ...state,\r\n        items: action.payload\r\n      };\r\n    case INCREMENT_ORDER:\r\n      if (orders.indexOf(action.payload) !== -1) {\r\n        let index = orders.indexOf(action.payload);\r\n        orders[index] = { ...action.payload };\r\n        orders[index].quantity++;\r\n        localStorage.setItem(\"orders\", JSON.stringify(orders));\r\n      }\r\n      return {\r\n        ...state,\r\n        items: orders\r\n      };\r\n    case DECREMENT_ORDER:\r\n      if (orders.indexOf(action.payload) !== -1) {\r\n        let index = orders.indexOf(action.payload);\r\n        orders[index] = { ...action.payload };\r\n        if (orders[index].quantity > 1) {\r\n          orders[index].quantity--;\r\n        }\r\n        localStorage.setItem(\"orders\", JSON.stringify(orders));\r\n      }\r\n      return {\r\n        ...state,\r\n        items: orders\r\n      };\r\n    case CHECK_OUT:\r\n      localStorage.setItem(\"orders\", null);\r\n      return {\r\n        ...state,\r\n        items: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import AppleDrinks from \"./images/apple-drinks.jpg\";\r\nimport Soda from \"./images/soda.jpg\";\r\nimport TomatoJuice from \"./images/tomato-juice.jpg\";\r\nimport IceCream from \"./images/icecream.jpg\";\r\n\r\nexport default [\r\n  {\r\n    id: 1,\r\n    title: \"Apple drinks\",\r\n    image: AppleDrinks,\r\n    price: 45.0\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Soda\",\r\n    image: Soda,\r\n    price: 30.0\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Tomato Juice\",\r\n    image: TomatoJuice,\r\n    price: 40.0\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Ice Cream\",\r\n    image: IceCream,\r\n    price: 45.0\r\n  }\r\n];\r\n","import { FETCH_PRODUCTS } from \"../actions\";\r\nimport products from \"../../mock/products\";\r\n\r\nconst initialState = {\r\n  items: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        items: products\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport OrderReducer from \"./orderReducer\";\r\nimport ProductReducer from \"./productReducer\";\r\n\r\nexport default combineReducers({\r\n  orders: OrderReducer,\r\n  product: ProductReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducers from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleWare),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}